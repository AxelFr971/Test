const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

// Cr√©er le dossier certs s'il n'existe pas
const certsDir = path.join(__dirname, 'certs');
if (!fs.existsSync(certsDir)) {
    fs.mkdirSync(certsDir);
    console.log('üìÅ Dossier certs cr√©√©');
}

// V√©rifier si OpenSSL est disponible
try {
    execSync('openssl version', { stdio: 'ignore' });
    console.log('‚úÖ OpenSSL d√©tect√©');
} catch (error) {
    console.error('‚ùå OpenSSL non trouv√©. Veuillez l\'installer:');
    console.log('   Windows: https://slproweb.com/products/Win32OpenSSL.html');
    console.log('   macOS: brew install openssl');
    console.log('   Linux: sudo apt-get install openssl');
    process.exit(1);
}

try {
    console.log('üîë G√©n√©ration des certificats SSL...');
    
    // G√©n√©rer la cl√© priv√©e
    execSync(`openssl genrsa -out ${path.join(certsDir, 'key.pem')} 2048`, { stdio: 'inherit' });
    console.log('‚úÖ Cl√© priv√©e g√©n√©r√©e');
    
    // G√©n√©rer le certificat auto-sign√©
    const certCommand = `openssl req -new -x509 -key ${path.join(certsDir, 'key.pem')} -out ${path.join(certsDir, 'cert.pem')} -days 365 -subj "/C=FR/ST=France/L=Local/O=VoiceChat/OU=Dev/CN=localhost"`;
    execSync(certCommand, { stdio: 'inherit' });
    console.log('‚úÖ Certificat auto-sign√© g√©n√©r√©');
    
    console.log('\nüéâ Certificats SSL cr√©√©s avec succ√®s!');
    console.log('üìç Emplacement:', certsDir);
    console.log('üîí Vous pouvez maintenant utiliser HTTPS avec: npm run https');
    console.log('\n‚ö†Ô∏è  Note: Ces certificats sont auto-sign√©s. Le navigateur affichera un avertissement de s√©curit√©.');
    console.log('üí° Cliquez sur "Avanc√©" puis "Continuer vers localhost" pour accepter.');
    
} catch (error) {
    console.error('‚ùå Erreur lors de la g√©n√©ration des certificats:', error.message);
    process.exit(1);
}